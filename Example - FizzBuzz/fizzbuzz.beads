//  this shows a persistent value FizzBuzzJazz grid with 120 cells
//  whatever cell you select by clicking is remembered for 30 days
//  we added the grid so it is more of a demonstration

beads 1 program FizzBuzz  title:"Deluxe FizzBuzzJazz"

const
	KEY = "FizzBuzz" // our key for the cookie we use to store persistent data

	//  you can add more words, just be sure to add more prime factors and colors
	WORDS = ["Fizz", "Buzz", "Jazz"]
	PRIMES = [3, 5, 7]
	COLORS = [LIGHT_SKY_BLUE, LIGHT_GREEN, YELLOW]

var
	//  this is our mutable state; just a single number at the moment
	my_state : record
		selected  //  which cell number is selected?

calc main_init
	//  this is the one-time initialization code
	//  if we have a previous stored value, read it in
	if cookie_exists(KEY)
		cookie_read(KEY) ===> my_state

grid main_draw
	horz slice
		// our main window will be divided into a grid with 10 columns
		skip 10 pt
		loop reps:10
			add 60 pt
			skip 4 pt
			
	vert slice
		// our main window will have 10 rows
		skip 10 pt
		loop reps:12
			add 14 pt
			skip 4 pt
	
	under
		//  fill the entire screen with a pleasant color
		draw_rect(fill:LIGHT_STEEL_BLUE)
	
	cell
		//  this routine will be called 100 times, and the implied block variable
		//  b will hold values, like the sequence number b.cell_seq
		var ss = ""
		var color = ALICE_BLUE

		loop across:WORDS index:wordx
			if mod(b.cell_seq, PRIMES[wordx]) == 0
				WORDS[wordx] &=> ss
				color = COLORS[wordx]
		if ss == ""
			//  plain cell
			ss = to_str(b.cell_seq)

		draw_rect(fill:color)
		draw_str(ss, size:0.7, color:BLACK)		

		//  if this is the selected cell, highlight with a red frame
		if b.cell_seq == my_state.selected
			draw_rect(thick:3 pt, pos:0.7, color:CRIMSON, corner:2 pt)
track EV_TAP
	//  if we tap inside one of the cells, respond by updating our current selected cell
	my_state.selected = b.cell_seq

	//  remember this on the hard drive by updating the cookie
	cookie_write(KEY, my_state, duration:30 day)
