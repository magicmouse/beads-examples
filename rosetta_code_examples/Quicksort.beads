beads 1 program Quicksort

calc main_init
	var arr = [1, 3, 5, 7, 9, 8, 6, 4, 2]  // test data

	quicksort(arr, 1, tree_count(arr))  //  sort the array

	loop across:arr index:ix
		log to_str(arr[ix])

--------------------------
calc quicksort(
	arr:array of num
	start
	high
	)
--------------------------
	if (start < high)
		var partitionIndex = partition(arr, start, high)
		quicksort(arr, start, partitionIndex - 1)
		quicksort(arr, partitionIndex+1, high)

--------------------------
calc partition(
	arr:array of num
	start
	high
	):num
--------------------------
	var pivot = arr[high]
	var i = start - 1
	var j = start

	loop while:(j <= high - 1)
		if arr[j] < pivot
			inc i
			swap arr[i] <=> arr[j]
		inc j
		
	swap arr[i+1] <=> arr[high]
	return (i+1)
