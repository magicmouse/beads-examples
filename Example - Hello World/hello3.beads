beads 1 program hello

//  test the canvas rendering of multiple line text
//  also show how to make a zoom control that operates using the mouse wheel
//  also shows how to use multiple different zoom controls
//  whichever side you are in, it will zoom that section with the mouse wheel

// define a gradient for the screen background
const GRAD1 : a_gradient = { grad_shape:LINEAR_GRADIENT, grad_angle:GRAD_TO_BOTTOM, 
		grad_stops:[ { stop_pos:0, stop_color:CHOCOLATE },
				     { stop_pos:48, stop_color:BEIGE },
					 { stop_pos:52, stop_color:BEIGE },
					 { stop_pos:100, stop_color:CHOCOLATE }] }

var 
	intf : record
		zoom : array of num  //  zoom level 1..4

const
	MIN_ZOOM = 1  //  full size
	MAX_ZOOM = 4  //  reduced size

=======================
calc main_init
	intf.zoom[1] = MAX_ZOOM
	intf.zoom[2] = MAX_ZOOM

=======================
horz slice main_draw
	skip 6 pt
	add 10 al section(1)
	skip 6 pt
	add 10 al section(2)
	skip 6 pt

=======================
draw section (
	level 
	)
	//  this creates a canvas layer, stores it in mycanvas
	draw_rect(grad:GRAD1, corner:10 pt) 

	//  there are 3 meta font names: _sans, _serif and _typewriter
	var height = intf.zoom[level]*15
	draw_str("‚ù§Ô∏è Section {level}\nZoom {intf.zoom[level]} üéâ", size:height pt, color:CHOCOLATE, font:"_typewriter")
	
	var cornerbox <=== solve_rect(basis:bb, pin:9, width:24 pt, height:80 pt)
	layer area:cornerbox d_zoomlevel(level)
--------
track EV_WHEEL
	//log "WHEEL, z={e.z}"
	var delta = -1 if e.z > 0 else +1
	intf.zoom[level] = clamp(intf.zoom[level]+delta, MIN_ZOOM, MAX_ZOOM)

=======================
vert slice d_zoomlevel(
	level
	)
	under
		draw_rect(fill:GRAY8, corner:4 pt) // , thick:1.5 pt, pos:0, color:GRAY6)

	loop from:1 to:4 rev:Y index:ix
		skip 2 pt
		add 10 al d_zoom_button(ix, level)   //  will go from 4..1
	skip 2 pt

=======================
draw d_zoom_button (
	ix  //  size from from 1..4, 1 is smallest
	level
	)
	var icon_back:color = GRAY8
	var icon_fore:color = GRAY3
	if ix == intf.zoom[level]
		icon_back = GRAY6
		icon_fore = ORANGE

	draw_rect(corner:5 pt, fill:icon_back)
	var diam = interpolate(ix, 1, 4, 4 pt, 16 pt)
	var box <=== solve_rect(basis:bb, pin:5, width:diam, height:diam)
	//log "diam={diam}, box={box}, ix={ix}"
	draw_oval(box:box, fill:icon_fore)
----
track EV_TAP
	intf.zoom[level] = ix	